{
    "_id": "33e8afb9-d9e4-44f4-9646-a7e10d41ca98",
    "colName": "tests",
    "created": "2024-12-21T03:59:21.502Z",
    "sortNum": 50000,
    "folders": [],
    "settings": {
        "headers": [
            {
                "name": "Content-Type",
                "value": "application/fhir+json"
            },
            {
                "name": "Authorization",
                "value": "Basic {{HAPI_FHIR_AUTH}}"
            }
        ],
        "options": {
            "baseUrl": "{{FHIR_SERVER_URL}}"
        }
    },
    "requests": [
        {
            "_id": "8ec0eb24-e395-459d-9479-6cb5d0ddb754",
            "colId": "33e8afb9-d9e4-44f4-9646-a7e10d41ca98",
            "containerId": "",
            "name": "exists female",
            "url": "Patient/psa-female/$everything",
            "method": "GET",
            "sortNum": 30000,
            "created": "2024-12-21T04:01:31.105Z",
            "modified": "2024-12-21T04:21:02.353Z",
            "headers": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                }
            ]
        },
        {
            "_id": "0c42ebd5-891d-4608-8c34-e33fd338d9ef",
            "colId": "33e8afb9-d9e4-44f4-9646-a7e10d41ca98",
            "containerId": "",
            "name": "test female",
            "url": "PlanDefinition/PSARecommendation/$apply",
            "method": "POST",
            "sortNum": 40000,
            "created": "2024-12-21T04:02:30.892Z",
            "modified": "2024-12-21T04:05:36.546Z",
            "headers": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"resourceType\": \"Parameters\",\n  \"parameter\": [\n    {\n      \"name\": \"subject\",\n      \"valueString\": \"Patient/psa-female\"\n    },\n    {\n      \"name\": \"parameters\",\n      \"resource\": {\n        \"resourceType\": \"Parameters\",\n        \"parameter\": [\n          {\n            \"name\": \"Reference dateTime\",\n            \"valueDateTime\": \"2024-08-31\"\n          }\n        ]\n      }\n    }\n  ]\n}\n",
                "form": []
            },
            "postReq": {
                "inlineScripts": [
                    {
                        "script": [
                            "// negative test case",
                            "let containsOperationOutcome = tc.response.json.contained &&",
                            "                               tc.response.json.contained.some(item => item.resourceType === \"OperationOutcome\");",
                            "",
                            "let requestGroupWithAction = tc.response.json.contained &&",
                            "                             tc.response.json.contained.find(item => ",
                            "                                 item.resourceType === \"RequestGroup\" && item.action);",
                            "",
                            "let success = !containsOperationOutcome && !requestGroupWithAction;",
                            "",
                            "tc.test(\"No OperationOutcome and no RequestGroup with action attribute present\", success);"
                        ]
                    }
                ]
            }
        },
        {
            "_id": "ce8dc6c5-7d84-445d-8235-b2d8f7d3ddcf",
            "colId": "33e8afb9-d9e4-44f4-9646-a7e10d41ca98",
            "containerId": "",
            "name": "exists no-psa",
            "url": "Patient/psa-no-psa/$everything",
            "method": "GET",
            "sortNum": 45000,
            "created": "2024-12-21T04:06:28.059Z",
            "modified": "2024-12-21T04:21:43.460Z",
            "headers": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                }
            ]
        },
        {
            "_id": "78633b88-8e96-41d1-8ee6-14c5a09c2e16",
            "colId": "33e8afb9-d9e4-44f4-9646-a7e10d41ca98",
            "containerId": "",
            "name": "test no-psa",
            "url": "PlanDefinition/PSARecommendation/$apply",
            "method": "POST",
            "sortNum": 50000,
            "created": "2024-12-21T04:06:30.931Z",
            "modified": "2024-12-21T04:08:58.654Z",
            "headers": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"resourceType\": \"Parameters\",\n  \"parameter\": [\n    {\n      \"name\": \"subject\",\n      \"valueString\": \"Patient/psa-no-psa\"\n    },\n    {\n      \"name\": \"parameters\",\n      \"resource\": {\n        \"resourceType\": \"Parameters\",\n        \"parameter\": [\n          {\n            \"name\": \"Reference dateTime\",\n            \"valueDateTime\": \"2024-08-31\"\n          }\n        ]\n      }\n    }\n  ]\n}\n",
                "form": []
            },
            "postReq": {
                "inlineScripts": [
                    {
                        "script": [
                            "// positive test case",
                            "let containsOperationOutcome = tc.response.json.contained &&",
                            "                               tc.response.json.contained.some(item => item.resourceType === \"OperationOutcome\");",
                            "",
                            "let requestGroupWithAction = tc.response.json.contained &&",
                            "                             tc.response.json.contained.find(item => ",
                            "                                 item.resourceType === \"RequestGroup\" && item.action);",
                            "",
                            "let success = !containsOperationOutcome && !!requestGroupWithAction;",
                            "",
                            "tc.test(\"No OperationOutcome. RequestGroup.action is present\", success);"
                        ]
                    }
                ]
            }
        },
        {
            "_id": "a7ef42bc-976d-42f0-a7a0-131cf2c7e72a",
            "colId": "33e8afb9-d9e4-44f4-9646-a7e10d41ca98",
            "containerId": "",
            "name": "exists follow-up-1-year",
            "url": "Patient/psa-follow-up-1-year/$everything",
            "method": "GET",
            "sortNum": 41250,
            "created": "2024-12-21T04:09:22.159Z",
            "modified": "2024-12-21T04:21:11.671Z",
            "headers": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                }
            ]
        },
        {
            "_id": "7be2571e-50ca-4853-8e86-8a788a0691fc",
            "colId": "33e8afb9-d9e4-44f4-9646-a7e10d41ca98",
            "containerId": "",
            "name": "test follow-up-1-year",
            "url": "PlanDefinition/PSARecommendation/$apply",
            "method": "POST",
            "sortNum": 42500,
            "created": "2024-12-21T04:09:27.343Z",
            "modified": "2024-12-21T04:11:23.638Z",
            "headers": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"resourceType\": \"Parameters\",\n  \"parameter\": [\n    {\n      \"name\": \"subject\",\n      \"valueString\": \"Patient/psa-follow-up-1-year\"\n    },\n    {\n      \"name\": \"parameters\",\n      \"resource\": {\n        \"resourceType\": \"Parameters\",\n        \"parameter\": [\n          {\n            \"name\": \"Reference dateTime\",\n            \"valueDateTime\": \"2024-08-31\"\n          }\n        ]\n      }\n    }\n  ]\n}\n",
                "form": []
            },
            "postReq": {
                "inlineScripts": [
                    {
                        "script": [
                            "// negative test case",
                            "let containsOperationOutcome = tc.response.json.contained &&",
                            "                               tc.response.json.contained.some(item => item.resourceType === \"OperationOutcome\");",
                            "",
                            "let requestGroupWithAction = tc.response.json.contained &&",
                            "                             tc.response.json.contained.find(item => ",
                            "                                 item.resourceType === \"RequestGroup\" && item.action);",
                            "",
                            "let success = !containsOperationOutcome && !requestGroupWithAction;",
                            "",
                            "tc.test(\"No OperationOutcome and no RequestGroup with action attribute present\", success);"
                        ]
                    }
                ]
            }
        },
        {
            "_id": "1ff859fa-994c-48aa-9abb-f41b27691711",
            "colId": "33e8afb9-d9e4-44f4-9646-a7e10d41ca98",
            "containerId": "",
            "name": "exists follow-up-1-year-overdue",
            "url": "Patient/psa-follow-up-1-year-overdue/$everything",
            "method": "GET",
            "sortNum": 47500,
            "created": "2024-12-21T04:12:04.559Z",
            "modified": "2024-12-21T04:21:33.385Z",
            "headers": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                }
            ]
        },
        {
            "_id": "ec5cdf2f-af04-471f-bc98-69eb350dedbd",
            "colId": "33e8afb9-d9e4-44f4-9646-a7e10d41ca98",
            "containerId": "",
            "name": "test follow-up-1-year-overdue",
            "url": "PlanDefinition/PSARecommendation/$apply",
            "method": "POST",
            "sortNum": 52500,
            "created": "2024-12-21T04:12:09.188Z",
            "modified": "2024-12-21T04:13:38.274Z",
            "headers": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"resourceType\": \"Parameters\",\n  \"parameter\": [\n    {\n      \"name\": \"subject\",\n      \"valueString\": \"Patient/psa-follow-up-1-year-overdue\"\n    },\n    {\n      \"name\": \"parameters\",\n      \"resource\": {\n        \"resourceType\": \"Parameters\",\n        \"parameter\": [\n          {\n            \"name\": \"Reference dateTime\",\n            \"valueDateTime\": \"2024-08-31\"\n          }\n        ]\n      }\n    }\n  ]\n}\n",
                "form": []
            },
            "postReq": {
                "inlineScripts": [
                    {
                        "script": [
                            "// positive test case",
                            "let containsOperationOutcome = tc.response.json.contained &&",
                            "                               tc.response.json.contained.some(item => item.resourceType === \"OperationOutcome\");",
                            "",
                            "let requestGroupWithAction = tc.response.json.contained &&",
                            "                             tc.response.json.contained.find(item => ",
                            "                                 item.resourceType === \"RequestGroup\" && item.action);",
                            "",
                            "let success = !containsOperationOutcome && !!requestGroupWithAction;",
                            "",
                            "tc.test(\"No OperationOutcome. RequestGroup.action is present\", success);"
                        ]
                    }
                ]
            }
        },
        {
            "_id": "1a993051-a38b-4a2d-956a-a17d699ed97d",
            "colId": "33e8afb9-d9e4-44f4-9646-a7e10d41ca98",
            "containerId": "",
            "name": "exists more-than-2-years",
            "url": "Patient/psa-more-than-2-years/$everything",
            "method": "GET",
            "sortNum": 55000,
            "created": "2024-12-21T04:14:13.345Z",
            "modified": "2024-12-21T04:15:09.100Z",
            "headers": []
        },
        {
            "_id": "ed35b47f-dcff-478c-8bf0-ca569f0c8612",
            "colId": "33e8afb9-d9e4-44f4-9646-a7e10d41ca98",
            "containerId": "",
            "name": "test more-than-2 years",
            "url": "PlanDefinition/PSARecommendation/$apply",
            "method": "POST",
            "sortNum": 60000,
            "created": "2024-12-21T04:14:17.063Z",
            "modified": "2024-12-21T04:15:48.895Z",
            "headers": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"resourceType\": \"Parameters\",\n  \"parameter\": [\n    {\n      \"name\": \"subject\",\n      \"valueString\": \"Patient/psa-more-than-2 years\"\n    },\n    {\n      \"name\": \"parameters\",\n      \"resource\": {\n        \"resourceType\": \"Parameters\",\n        \"parameter\": [\n          {\n            \"name\": \"Reference dateTime\",\n            \"valueDateTime\": \"2024-08-31\"\n          }\n        ]\n      }\n    }\n  ]\n}\n",
                "form": []
            },
            "postReq": {
                "inlineScripts": [
                    {
                        "script": [
                            "// positive test case",
                            "let containsOperationOutcome = tc.response.json.contained &&",
                            "                               tc.response.json.contained.some(item => item.resourceType === \"OperationOutcome\");",
                            "",
                            "let requestGroupWithAction = tc.response.json.contained &&",
                            "                             tc.response.json.contained.find(item => ",
                            "                                 item.resourceType === \"RequestGroup\" && item.action);",
                            "",
                            "let success = !containsOperationOutcome && !!requestGroupWithAction;",
                            "",
                            "tc.test(\"No OperationOutcome. RequestGroup.action is present\", success);"
                        ]
                    }
                ]
            }
        },
        {
            "_id": "23ebe6ad-a51e-4722-a09d-5004dc3c9c0e",
            "colId": "33e8afb9-d9e4-44f4-9646-a7e10d41ca98",
            "containerId": "",
            "name": "exists too-young",
            "url": "Patient/psa-too-young/$everything",
            "method": "GET",
            "sortNum": 65000,
            "created": "2024-12-21T04:16:21.394Z",
            "modified": "2024-12-21T04:22:33.187Z",
            "headers": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                }
            ]
        },
        {
            "_id": "2fe4bcfe-3d23-40c8-8e8c-45eecabcbb35",
            "colId": "33e8afb9-d9e4-44f4-9646-a7e10d41ca98",
            "containerId": "",
            "name": "test too-young",
            "url": "PlanDefinition/PSARecommendation/$apply",
            "method": "POST",
            "sortNum": 70000,
            "created": "2024-12-21T04:16:25.866Z",
            "modified": "2024-12-21T04:18:01.609Z",
            "headers": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"resourceType\": \"Parameters\",\n  \"parameter\": [\n    {\n      \"name\": \"subject\",\n      \"valueString\": \"Patient/psa-too-young\"\n    },\n    {\n      \"name\": \"parameters\",\n      \"resource\": {\n        \"resourceType\": \"Parameters\",\n        \"parameter\": [\n          {\n            \"name\": \"Reference dateTime\",\n            \"valueDateTime\": \"2024-08-31\"\n          }\n        ]\n      }\n    }\n  ]\n}\n",
                "form": []
            },
            "postReq": {
                "inlineScripts": [
                    {
                        "script": [
                            "// negative test case",
                            "let containsOperationOutcome = tc.response.json.contained &&",
                            "                               tc.response.json.contained.some(item => item.resourceType === \"OperationOutcome\");",
                            "",
                            "let requestGroupWithAction = tc.response.json.contained &&",
                            "                             tc.response.json.contained.find(item => ",
                            "                                 item.resourceType === \"RequestGroup\" && item.action);",
                            "",
                            "let success = !containsOperationOutcome && !requestGroupWithAction;",
                            "",
                            "tc.test(\"No OperationOutcome and no RequestGroup with action attribute present\", success);"
                        ]
                    }
                ]
            }
        },
        {
            "_id": "6bdc4d42-79d8-46e9-8ba9-504579e938e4",
            "colId": "33e8afb9-d9e4-44f4-9646-a7e10d41ca98",
            "containerId": "",
            "name": "exists within-2-years",
            "url": "Patient/psa-within-2-years/$everything",
            "method": "GET",
            "sortNum": 75000,
            "created": "2024-12-21T04:18:34.373Z",
            "modified": "2024-12-21T04:22:59.143Z",
            "headers": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                }
            ]
        },
        {
            "_id": "d6b063fc-b945-4263-aed6-682b4a985244",
            "colId": "33e8afb9-d9e4-44f4-9646-a7e10d41ca98",
            "containerId": "",
            "name": "test within-2-years",
            "url": "PlanDefinition/PSARecommendation/$apply",
            "method": "POST",
            "sortNum": 80000,
            "created": "2024-12-21T04:18:39.483Z",
            "modified": "2024-12-21T04:19:43.309Z",
            "headers": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"resourceType\": \"Parameters\",\n  \"parameter\": [\n    {\n      \"name\": \"subject\",\n      \"valueString\": \"Patient/psa-within 2 years\"\n    },\n    {\n      \"name\": \"parameters\",\n      \"resource\": {\n        \"resourceType\": \"Parameters\",\n        \"parameter\": [\n          {\n            \"name\": \"Reference dateTime\",\n            \"valueDateTime\": \"2024-08-31\"\n          }\n        ]\n      }\n    }\n  ]\n}\n",
                "form": []
            },
            "postReq": {
                "inlineScripts": [
                    {
                        "script": [
                            "// negative test case",
                            "let containsOperationOutcome = tc.response.json.contained &&",
                            "                               tc.response.json.contained.some(item => item.resourceType === \"OperationOutcome\");",
                            "",
                            "let requestGroupWithAction = tc.response.json.contained &&",
                            "                             tc.response.json.contained.find(item => ",
                            "                                 item.resourceType === \"RequestGroup\" && item.action);",
                            "",
                            "let success = !containsOperationOutcome && !requestGroupWithAction;",
                            "",
                            "tc.test(\"No OperationOutcome and no RequestGroup with action attribute present\", success);"
                        ]
                    }
                ]
            }
        }
    ]
}